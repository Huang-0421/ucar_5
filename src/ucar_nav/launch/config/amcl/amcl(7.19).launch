<launch>
<node pkg="amcl" type="amcl" name="amcl">
  <!-- Publish scans from best pose at a max of 10 Hz -->
  <param name="odom_model_type" value="omni"/>
  <param name="odom_alpha5" value="0.1"/>
  <param name="transform_tolerance" value="0.2" />
  <param name="gui_publish_rate" value="20.0"/>
  <param name="laser_max_beams" value="50"/>
  <param name="use_map_topic" value="false"/>  
  <!-- //当设置为true时，AMCL将会订阅map话题，而不是调用服务返回地图。也就是说，当设置为true时，有另外一个节点实时的发布map话题，也就是机器人在实时的进行地图构建，并供给amcl话题使用；当设置为false时，通过map server，也就是调用已经构建完成的地图。在navigation 1.4.2中新加入的参数。 -->
  <param name="first_map_only" value="true"/>  
    <!-- //当设置为true时，AMCL将仅仅使用订阅的第一个地图，而不是每次接收到新的时更新为一个新的地图，在navigation 1.4.2中新加入的参数。 -->


  <param name="min_particles" value="500"/>
  <!-- 允许的粒子数量的最小值，默认100 -->
  <param name="max_particles" value="5000"/>
  <!-- 允许的粒子数量的最大值，默认5000 -->
  <param name="kld_err" value="0.05"/>
  <!-- 真实分布和估计分布之间的最大误差，默认0.01 -->
  <param name="kld_z" value="0.99"/>
  <!-- 上标准分位数（1-p），其中p是估计分布上误差小于kld_err的概率，默认0.99 -->
  <param name="odom_alpha1" value="1.0"/>
  <!-- 指定由机器人运动部分的旋转分量估计的里程计旋转的期望噪声，默认0.2（旋转存在旋转噪声） -->
  <param name="odom_alpha2" value="0.2"/>
  <!-- 制定由机器人运动部分的平移分量估计的里程计旋转的期望噪声，默认0.2（旋转中可能出现平移噪声） -->
  <!-- translation std dev, m -->
  <param name="odom_alpha3" value="0.2"/>
  <!-- 指定由机器人运动部分的平移分量估计的里程计平移的期望噪声，默认0.2（类似上） -->
  <param name="odom_alpha4" value="0.2"/>
  <!-- 指定由机器人运动部分的旋转分量估计的里程计平移的期望噪声，默认0.2（类似上） -->
  <param name="laser_z_hit" value="0.5"/>
  <param name="laser_z_short" value="0.05"/>
  <param name="laser_z_max" value="0.05"/>
  <param name="laser_z_rand" value="0.5"/>
  <!--
这4个laser_z参数，在动态环境下的定位时用于异常值去除技术（还有一种状态增广技术-将隐藏状态包含进状态估计，缺点是计算复杂，acml定位未使用这种定位）
这种定位思想是环境中的动态物体总是会获得比静态地图障碍物更短的读数（人在障碍物后面是扫描不到的-假如不考虑体积，比如单个激光光束不用考虑体积），利用这样的不对称性去除异常值
缺点是：在其他可改变环境的其他类型情景（如去除障碍物）时，这样的非对称性可能不存在，但相同概率分析通常是可适用的。因为每一个异常值都被舍弃了，缺少对称性的缺点可能是从全局定位失效中恢复变得不可能。这种情况下，×××强加额外约束（如限制部分可能已被破坏的测量值）是有意义的（×××怎么约束）。（这里说的舍弃与likelihood_field模型的舍弃有区别，这里定位是先计算测量值对应非预期物体的概率（意外对象概率/混合概率）大于用户设定的阀值（amcl配置参数里貌似没有这个？）舍弃，而似然域概率是舍弃的超出最大测量范围的值，不计算概率。）
（针对这个缺点不想改代码的粗暴又好用省心的处理方式可能是构图的时候将可移动的障碍物搬走，还有更直接的办法就是PS）
最后，概率由这4个权重乘他们对应的概率然后相加，算法中4个权重相加等于1(这里默认值不等于1，估计做了归一化)。
这6个laser_参数可以用learn_intrinsic_parameters算法计算，该算法是期望值极大化算法，是估计极大似然参数的迭代过程。（×××好吧，amcl好像并没有做这个工作）
-->
  <param name="laser_sigma_hit" value="0.2"/>
  <!-- 被用在模型的z_hit部分的高斯模型的标准差，默认0.2m -->
  <param name="laser_lambda_short" value="0.1"/>
  <!-- 模型z_short部分的指数衰减参数，默认0.1（根据ηλe^(-λz)，λ越大随距离增大意外对象概率衰减越快） -->
  <!-- <param name="laser_model_type" value="likelihood_field"/> -->
  <param name="laser_model_type" value="beam"/>
  <param name="laser_likelihood_max_dist" value="2.0"/>
  <!-- 地图上做障碍物膨胀的最大距离，用作likelihood_field模型（likelihood_field_range_finder_model只描述了最近障碍物的距离，（目前理解应该是在这个距离内的障碍物膨胀处理,但是算法里又没有提到膨胀，不明确是什么意思）.这里算法用到上面的laser_sigma_hit。似然域计算测量概率的算法是将t时刻的各个测量（舍去达到最大测量范围的测量值）的概率相乘，单个测量概率：Zh * prob(dist,σ) +avg，Zh为laser_z_hit,avg为均匀分布概率，dist最近障碍物的距离，prob为0为中心标准方差为σ（laser_sigma_hit）的高斯分布的距离概率） -->
  <param name="update_min_d" value="0.10"/>
  <param name="update_min_a" value="0.50"/>
  <!-- 执行滤波更新前旋转的角度，默认pi/6 rad -->
  <param name="odom_frame_id" value="odom"/>
  <param name="resample_interval" value="1"/>
  <!-- 在重采样前需要的滤波更新的次数,默认2 -->
  <param name="transform_tolerance" value="0.1"/>
  <!-- tf变换发布推迟的时间，为了说明tf变换在未来时间内是可用的 -->
  <param name="recovery_alpha_slow" value="0.0"/>
  <!-- 慢速的平均权重滤波的指数衰减频率，用作决定什么时候通过增加随机位姿来recover，默认0（disable），可能0.001是一个不错的值 -->
  <param name="recovery_alpha_fast" value="0.0"/>
  <!-- 快速的平均权重滤波的指数衰减频率，用作决定什么时候通过增加随机位姿来recover，默认0（disable），可能0.1是个不错的值 -->

  <param name="initial_pose_x"   value="0.00"/>
  <param name="initial_pose_y" value="0.00"/>
  <param name="initial_pose_a" value="0.00"/>
  <!-- <param name="odom_frame_id" value="odom"/>   -->
  <!-- //里程计默认使用的坐标系 -->
  <!-- <param name="base_frame_id" value="base_link"/>   -->
  <!-- //用作机器人的基坐标系 -->
  <!-- <param name="global_frame_id" value="map"/>   -->
  <!-- //由定位系统发布的坐标系名称 -->
  <!-- <param name="tf_broadcast" value="false"/>   -->
  <!-- //设置为false阻止amcl发布全局坐标系和里程计坐标系之间的tf变换 -->
</node>
</launch>